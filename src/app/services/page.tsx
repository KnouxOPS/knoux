"use client"

import React from 'react';
import { Card } from "../../components/ui/card";
import { ScrollArea } from "../../components/ui/scroll-area";
import { Service } from '../../types/service';
import ServicePreview from '../../components/services/ServicePreview';

const DEMO_SERVICES: Service[] = [
  {
    id: '1',
    name: 'ูุธุงู ุงููุฑุงูุจุฉ ุงููุชูุฏู',
    description: 'ูุฑุงูุจุฉ ุดุงููุฉ ููุฃูุธูุฉ ูุงูุดุจูุงุช ูุน ุชุญูููุงุช ุฐููุฉ ูู ุงูููุช ุงููุนูู. ูููุฑ ุชูุจููุงุช ููุฑูุฉ ูุชูุงุฑูุฑ ุฃุฏุงุก ูุชูุฏูุฉ ูุน ุฏุนู ููุฐูุงุก ุงูุงุตุทูุงุนู ูู ุชุญููู ุงูุฃููุงุท',
    icon: '๐',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/3861969/pexels-photo-3861969.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ูุฑุงูุจุฉ 24/7', 'ุชุญูููุงุช ูุชูุฏูุฉ', 'ุชูุจููุงุช ุฐููุฉ', 'ููุญุฉ ุชุญูู ูุฑูุฒูุฉ']
  },
  {
    id: '2',
    name: 'ููุตุฉ ุงูุชุญูู ุงูููุญุฏุฉ',
    description: 'ููุตุฉ ูุชูุงููุฉ ููุชุญูู ูู ุฌููุน ุงูุฃูุธูุฉ ูุงูุฃุฌูุฒุฉ ุนู ุจูุนุฏ. ุชุฏุนู ุงูุฃุชูุชุฉ ุงูุฐููุฉ ูุฌุฏููุฉ ุงูููุงู ูุน ูุงุฌูุฉ ูุณุชุฎุฏู ุณููุฉ ุงูุงุณุชุฎุฏุงู',
    icon: '๐ฎ',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/3184298/pexels-photo-3184298.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ุชุญูู ูุฑูุฒู', 'ุฃุชูุชุฉ ุฐููุฉ', 'ุฌุฏููุฉ ุงูููุงู', 'ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช']
  },
  {
    id: '3',
    name: 'ูุธุงู ุงูุชูุงุฑูุฑ ุงูุฐูู',
    description: 'ูุธุงู ูุชุทูุฑ ูุฅูุดุงุก ูุชุญููู ุงูุชูุงุฑูุฑ ูุน ุฏุนู ููุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉ ูุงูุชุตุฏูุฑ ุจุตูุบ ูุชุนุฏุฏุฉ. ูููุฑ ุฑุคู ุชุญููููุฉ ุนูููุฉ ููุคุดุฑุงุช ุฃุฏุงุก ุฑุฆูุณูุฉ',
    icon: '๐',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/669615/pexels-photo-669615.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ุชูุงุฑูุฑ ุชูุงุนููุฉ', 'ุชุตุฏูุฑ ูุชุนุฏุฏ ุงูุตูุบ', 'ุชุญูููุงุช ูุชูุฏูุฉ', 'ูุคุดุฑุงุช ุฃุฏุงุก']
  },
  {
    id: '4',
    name: 'ุฅุฏุงุฑุฉ ุงูุฃูู ุงูุณูุจุฑุงูู',
    description: 'ุญูุงูุฉ ูุชูุงููุฉ ููุฃูุธูุฉ ูุงูุจูุงูุงุช ูุน ูุฑุงูุจุฉ ูุณุชูุฑุฉ ููุชูุฏูุฏุงุช ูุชุญููู ุงููุฎุงุทุฑ. ูุดูู ุฃุฏูุงุช ูุชูุฏูุฉ ูููุดู ูุงูุงุณุชุฌุงุจุฉ ููุญูุงุฏุซ ุงูุฃูููุฉ',
    icon: '๐',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/5380642/pexels-photo-5380642.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ุญูุงูุฉ ูุชูุฏูุฉ', 'ุชุญููู ุงูุชูุฏูุฏุงุช', 'ุงุณุชุฌุงุจุฉ ููุญูุงุฏุซ', 'ุชูููู ุงููุฎุงุทุฑ']
  },
  {
    id: '5',
    name: 'ุฅุฏุงุฑุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู',
    description: 'ูุธุงู ูุชูุงูู ูุฅุฏุงุฑุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู ูุงูุงุณุชุฑุฌุงุน ูุน ุฏุนู ููุชุฎุฒูู ุงูุณุญุงุจู ูุงููุญูู. ูููุฑ ุฌุฏููุฉ ุชููุงุฆูุฉ ูุชุดููุฑ ูุชูุฏู ููุจูุงูุงุช',
    icon: '๐พ',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/325229/pexels-photo-325229.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ูุณุฎ ุชููุงุฆู', 'ุชุฎุฒูู ุณุญุงุจู', 'ุงุณุชุฑุฌุงุน ุณุฑูุน', 'ุชุดููุฑ ูุชูุฏู']
  },
  {
    id: '6',
    name: 'ุฎุฏูุฉ ุชุญููู ุงูุจูุงูุงุช',
    description: 'ุฎุฏูุฉ ูุชูุฏูุฉ ูุชุญููู ุงูุจูุงูุงุช ุงููุจูุฑุฉ ุจุงุณุชุฎุฏุงู ุชูููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู. ุชููุฑ ุฑุคู ูููุฉ ุชุณุงุนุฏ ูู ุงุชุฎุงุฐ ุงููุฑุงุฑุงุช ุงูุงุณุชุฑุงุชูุฌูุฉ',
    icon: '๐',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/386197/pexels-photo-386197.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ุชุญูููุงุช ูุชูุฏูุฉ', 'ุชูุงูู ูุน ูุตุงุฏุฑ ุจูุงูุงุช ูุชุนุฏุฏุฉ', 'ููุญุฉ ุชุญูู ุชูุงุนููุฉ', 'ุชูุงุฑูุฑ ุฏูุฑูุฉ']
  },
  {
    id: '7',
    name: 'ููุตุฉ ุงูุชูุงุตู ุงูุฏุงุฎูู',
    description: 'ููุตุฉ ุชูุงุตู ุฏุงุฎูู ูุฎุตุตุฉ ููุดุฑูุงุช ูุชุญุณูู ุงูุชุนุงูู ูุชุจุงุฏู ุงููุนูููุงุช ุจูู ุงููุฑู. ุชุชุถูู ุฃุฏูุงุช ูููุฑุงุณูุฉ ุงูููุฑูุฉุ ูุดุงุฑูุฉ ุงููููุงุชุ ูุฅุฏุงุฑุฉ ุงููุดุงุฑูุน',
    icon: '๐ฌ',
    status: 'active',
    previewUrl: 'https://images.pexels.com/photos/3184460/pexels-photo-3184460.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    features: ['ูุฑุงุณูุฉ ููุฑูุฉ', 'ูุดุงุฑูุฉ ูููุงุช', 'ุฅุฏุงุฑุฉ ูุดุงุฑูุน', 'ุชูุงูู ูุน ุฃุฏูุงุช ุฎุงุฑุฌูุฉ']
  }
];

export default function ServicesPage() {
  const [selectedService, setSelectedService] = React.useState<Service | null>(null);

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-4xl font-bold mb-8 text-center">ุงูุฎุฏูุงุช ุงููุชุงุญุฉ</h1>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {DEMO_SERVICES.map((service) => (
          <ServiceCard 
            key={service.id} 
            service={service}
            isSelected={selectedService?.id === service.id}
            onClick={() => setSelectedService(service)}
          />
        ))}
      </div>

      <div className="mt-8">
        <h2 className="text-2xl font-semibold mb-4">ูุนุงููุฉ ูุจุงุดุฑุฉ</h2>
        <ScrollArea className="h-[500px] w-full rounded-lg border p-4 glassmorphism">
          {selectedService ? (
            <ServicePreview service={selectedService} />
          ) : (
            <div className="flex items-center justify-center h-full">
              <p className="text-lg text-gray-500 dark:text-gray-400">
                ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุฎุฏูุฉ ูููุนุงููุฉ
              </p>
            </div>
          )}
        </ScrollArea>
      </div>
    </div>
  );
}

interface ServiceCardProps {
  service: Service;
  isSelected: boolean;
  onClick: () => void;
}

const ServiceCard: React.FC<ServiceCardProps> = ({ service, isSelected, onClick }) => {
  return (
    <Card 
      className={`p-6 hover:shadow-lg transition-all cursor-pointer ${
        isSelected ? 'ring-2 ring-black dark:ring-white' : ''
      }`}
      onClick={onClick}
    >
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-3 rtl:space-x-reverse">
          <span className="text-2xl">{service.icon}</span>
          <h3 className="text-xl font-semibold">{service.name}</h3>
        </div>
        <div className={`w-3 h-3 rounded-full ${
          service.status === 'active' ? 'bg-green-500' :
          service.status === 'error' ? 'bg-red-500' :
          'bg-yellow-500'
        }`}></div>
      </div>
      <p className="text-gray-600 dark:text-gray-300 mb-4">
        {service.description}
      </p>
      <button className="w-full bg-black text-white dark:bg-white dark:text-black py-2 rounded-md hover:opacity-90 transition-opacity">
        ุนุฑุถ ุงูุชูุงุตูู
      </button>
    </Card>
  );
};
